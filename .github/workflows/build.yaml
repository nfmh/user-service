name: Build Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'

jobs:
  build_pipeline:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # Install Dependencies (including python-dotenv)
    - name: Install Dependencies (Flask, SQLAlchemy, JWT, bcrypt, CORS, pytest, pytest-cov, Flask-WTF, python-dotenv)
      run: |
        pip install Flask flask_sqlalchemy flask_jwt_extended bcrypt flask_cors flask_wtf bandit pytest pytest-cov python-dotenv

    # Load environment variables from .env file
    - name: Load .env file
      run: |
        if [ -f .env ]; then
          export $(cat .env | grep -v '^#' | xargs)
        fi

    # Step 1: Run Unit Tests with Coverage
    - name: Run Unit Tests with Coverage
      run: |
        pytest --cov=src/app --cov=src/services --cov-report=xml:coverage-reports/coverage.xml --cov-report=html:coverage-reports/htmlcov
        # Post-process the coverage report to fix paths
        sed -i 's|/home/runner/work/user-service/user-service/||g' coverage-reports/coverage.xml  # Remove absolute paths

    # Step 2: Upload Coverage to SonarCloud
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
      with:
        args: >
          -Dsonar.projectKey=nfmh_user-service
          -Dsonar.organization=nfmh
          -Dsonar.sources=src/app,src/services  # Include /services path in SonarCloud scan
          -Dsonar.tests=src/tests
          -Dsonar.python.coverage.reportPaths=coverage-reports/coverage.xml
          -Dsonar.python.version=3.12
    
    # Docker build step
    - name: Build Docker image
      run: docker build -t user-service:1.0 .

    # Trivy scan step
    - name: Run Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: user-service:1.0
        format: 'table'
        severity: 'HIGH,CRITICAL'
        exit-code: '1'  # Trivy will fail the build with code 1 if vulnerabilities are found
